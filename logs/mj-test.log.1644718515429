INFO  03:13:45,617 - Compiling source file: C:\Users\PC\pp1Domaci\workspace\MJCompiler\test\program.mj
INFO  03:13:45,759 - #2 program
INFO  03:13:45,759 - #50 test302
INFO  03:13:45,760 - #3 const
INFO  03:13:45,762 - #50 int
INFO  03:13:45,762 - #50 jedan
INFO  03:13:45,763 - #29 =
INFO  03:13:45,764 - #48 1
INFO  03:13:45,764 - #5 ;
INFO  03:13:45,767 - #50 int
INFO  03:13:45,768 - #50 i
INFO  03:13:45,768 - #5 ;
INFO  03:13:45,771 - #50 bool
INFO  03:13:45,772 - #50 ibool
INFO  03:13:45,772 - #5 ;
INFO  03:13:45,772 - #50 int
INFO  03:13:45,773 - #50 niz2
INFO  03:13:45,773 - #5 ;
INFO  03:13:45,773 - #46 record
INFO  03:13:45,773 - #50 Test
INFO  03:13:45,774 - #23 {
INFO  03:13:45,776 - #50 int
INFO  03:13:45,779 - #50 niz
INFO  03:13:45,779 - #25 [
INFO  03:13:45,781 - #26 ]
INFO  03:13:45,781 - #5 ;
INFO  03:13:45,781 - #50 int
INFO  03:13:45,782 - #50 a
INFO  03:13:45,782 - #5 ;
INFO  03:13:45,782 - #24 }
INFO  03:13:45,784 - #50 Test
INFO  03:13:45,786 - #50 t1
INFO  03:13:45,786 - #4 ,
INFO  03:13:45,786 - #50 t2
INFO  03:13:45,786 - #5 ;
INFO  03:13:45,786 - #23 {
INFO  03:13:45,787 - #50 int
INFO  03:13:45,788 - #50 sum
INFO  03:13:45,789 - #27 (
INFO  03:13:45,791 - #50 int
INFO  03:13:45,791 - #50 z
INFO  03:13:45,791 - #4 ,
INFO  03:13:45,793 - #50 int
INFO  03:13:45,794 - #50 d
INFO  03:13:45,794 - #28 )
INFO  03:13:45,794 - #23 {
INFO  03:13:45,795 - #13 return
INFO  03:13:45,797 - #50 z
INFO  03:13:45,797 - #38 +
INFO  03:13:45,801 - #50 d
INFO  03:13:45,804 - #5 ;
INFO  03:13:45,804 - #24 }
INFO  03:13:45,805 - #50 int
INFO  03:13:45,808 - #50 inkrement
INFO  03:13:45,808 - #27 (
INFO  03:13:45,809 - #50 int
INFO  03:13:45,809 - #50 a
INFO  03:13:45,809 - #4 ,
INFO  03:13:45,809 - #50 int
INFO  03:13:45,809 - #50 inc
INFO  03:13:45,809 - #28 )
INFO  03:13:45,809 - #50 int
INFO  03:13:45,810 - #50 pom
INFO  03:13:45,810 - #5 ;
INFO  03:13:45,810 - #23 {
INFO  03:13:45,810 - #20 if
INFO  03:13:45,810 - #27 (
INFO  03:13:45,810 - #50 inc
INFO  03:13:45,811 - #30 ==
INFO  03:13:45,811 - #50 jedan
INFO  03:13:45,816 - #28 )
INFO  03:13:45,820 - #50 pom
INFO  03:13:45,821 - #29 =
INFO  03:13:45,821 - #48 1
INFO  03:13:45,824 - #5 ;
INFO  03:13:45,824 - #21 else
INFO  03:13:45,824 - #20 if
INFO  03:13:45,825 - #27 (
INFO  03:13:45,825 - #50 inc
INFO  03:13:45,825 - #30 ==
INFO  03:13:45,825 - #48 2
INFO  03:13:45,825 - #28 )
INFO  03:13:45,825 - #50 pom
INFO  03:13:45,825 - #29 =
INFO  03:13:45,825 - #50 a
INFO  03:13:45,826 - #5 ;
INFO  03:13:45,826 - #13 return
INFO  03:13:45,826 - #50 sum
INFO  03:13:45,827 - #27 (
INFO  03:13:45,827 - #50 a
INFO  03:13:45,827 - #4 ,
INFO  03:13:45,828 - #50 pom
INFO  03:13:45,828 - #28 )
INFO  03:13:45,829 - #5 ;
INFO  03:13:45,829 - #24 }
INFO  03:13:45,829 - #50 bool
INFO  03:13:45,829 - #50 verify
INFO  03:13:45,830 - #27 (
INFO  03:13:45,830 - #28 )
INFO  03:13:45,831 - #23 {
INFO  03:13:45,831 - #17 print
INFO  03:13:45,832 - #27 (
INFO  03:13:45,832 - #47 v
INFO  03:13:45,832 - #28 )
INFO  03:13:45,833 - #5 ;
INFO  03:13:45,833 - #13 return
INFO  03:13:45,834 - #49 false
INFO  03:13:45,834 - #5 ;
INFO  03:13:45,835 - #24 }
INFO  03:13:45,835 - #14 void
INFO  03:13:45,836 - #50 main
INFO  03:13:45,837 - #27 (
INFO  03:13:45,837 - #28 )
INFO  03:13:45,837 - #23 {
INFO  03:13:45,837 - #20 if
INFO  03:13:45,837 - #27 (
INFO  03:13:45,837 - #48 1
INFO  03:13:45,838 - #31 !=
INFO  03:13:45,838 - #48 1
INFO  03:13:45,839 - #28 )
INFO  03:13:45,839 - #17 print
INFO  03:13:45,839 - #27 (
INFO  03:13:45,839 - #39 -
INFO  03:13:45,840 - #48 6
INFO  03:13:45,840 - #28 )
INFO  03:13:45,840 - #5 ;
INFO  03:13:45,840 - #21 else
INFO  03:13:45,840 - #17 print
INFO  03:13:45,840 - #27 (
INFO  03:13:45,840 - #48 0
INFO  03:13:45,840 - #28 )
INFO  03:13:45,840 - #5 ;
INFO  03:13:45,841 - #50 ibool
INFO  03:13:45,841 - #29 =
INFO  03:13:45,841 - #49 false
INFO  03:13:45,841 - #5 ;
INFO  03:13:45,841 - #50 i
INFO  03:13:45,841 - #29 =
INFO  03:13:45,841 - #48 0
INFO  03:13:45,841 - #5 ;
INFO  03:13:45,841 - #9 do
INFO  03:13:45,842 - #23 {
INFO  03:13:45,844 - #20 if
INFO  03:13:45,844 - #27 (
INFO  03:13:45,844 - #50 i
INFO  03:13:45,844 - #30 ==
INFO  03:13:45,844 - #48 2
INFO  03:13:45,844 - #28 )
INFO  03:13:45,844 - #50 ibool
INFO  03:13:45,845 - #29 =
INFO  03:13:45,845 - #49 true
INFO  03:13:45,845 - #5 ;
INFO  03:13:45,845 - #50 i
INFO  03:13:45,845 - #44 ++
INFO  03:13:45,845 - #5 ;
INFO  03:13:45,845 - #24 }
INFO  03:13:45,845 - #10 while
INFO  03:13:45,845 - #27 (
INFO  03:13:45,845 - #50 i
INFO  03:13:45,845 - #34 <
INFO  03:13:45,845 - #48 5
INFO  03:13:45,847 - #28 )
INFO  03:13:45,847 - #5 ;
INFO  03:13:45,847 - #20 if
INFO  03:13:45,847 - #27 (
INFO  03:13:45,847 - #50 ibool
INFO  03:13:45,847 - #28 )
INFO  03:13:45,847 - #20 if
INFO  03:13:45,847 - #27 (
INFO  03:13:45,848 - #50 i
INFO  03:13:45,848 - #30 ==
INFO  03:13:45,848 - #48 5
INFO  03:13:45,848 - #28 )
INFO  03:13:45,848 - #17 print
INFO  03:13:45,848 - #27 (
INFO  03:13:45,848 - #48 1
INFO  03:13:45,848 - #28 )
INFO  03:13:45,848 - #5 ;
INFO  03:13:45,848 - #21 else
INFO  03:13:45,848 - #17 print
INFO  03:13:45,848 - #27 (
INFO  03:13:45,848 - #39 -
INFO  03:13:45,849 - #48 1
INFO  03:13:45,849 - #28 )
INFO  03:13:45,849 - #5 ;
INFO  03:13:45,849 - #50 t1
INFO  03:13:45,849 - #29 =
INFO  03:13:45,849 - #6 new
INFO  03:13:45,849 - #50 Test
INFO  03:13:45,849 - #5 ;
INFO  03:13:45,849 - #50 t1
INFO  03:13:45,849 - #43 .
INFO  03:13:45,850 - #50 a
INFO  03:13:45,850 - #29 =
INFO  03:13:45,850 - #48 2
INFO  03:13:45,850 - #5 ;
INFO  03:13:45,850 - #17 print
INFO  03:13:45,850 - #27 (
INFO  03:13:45,851 - #22 A
ERROR 03:13:45,851 - 
Sintaksna greska na liniji 57
ERROR 03:13:45,851 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
